Marche à suivre pour utiliser Docker avec les élèves

Impératif : le compte DGEP de l’élève doit être membre du groupe de sécurité local « docker-users ». 
Un logout/login est obligatoire pour appliquer l’appartenance de groupe à la session Windows de l’élève (net localgroup docker-users "eleve-windows-id" /ADD).
	
Extraire le contenu de l’archive dans C:\docker (le répertoire n’est pas important, je n’utilise juste pas le disque SSD de l’élève car 
le partage par volume Docker ne fonctionne pas avec ce media)
	
Depuis le dosser qui contient votre yml, lancez la commande «docker-compose up -d ». Le « -d » signifie daemon et permet de garder vos 
containers actifs malgré une fermeture de la console cmd.exe.

commande = docker-compose up -d
----------------------------------------------------------------------------------------------------------------------------------------------------------

Pour se connecter sur container depuis un terminal :

docker exec -it cec776015692 bash

exec = executer 
-it = identifiant
cec776015692 = identifiant

----------------

Pour implementer une base de donnée :

docker exec -i cec776015692 mysql -uroot -proot < db_space_invaders.sql

-i = identifiant
cec776015692 = identifiant

------------------------------------------------------------------------------------------------------------------------------------------------------------

Differante commande MySQL:

pour voir une base de données = SHOW databases;
pour utiliser une base de données = USE (nom de la db);
pour voir les tables d'une db = SHOW tables;
pour voir les méta données = DESC (nom de la tables);

-------------------------------------------------------------------------------------------------------------------------------------------------------------

Cahier des charges 

A)

B)

C)

Requête 1: SELECT * FROM t_joueur ORDER BY jouNombrePoints DESC LIMIT 5

Requête 2: SELECT MAX(armPrix) AS PrixMaximum, MIN(armPrix) AS PrixMinimum, AVG(armPrix) AS PrixMoyen FROM t_arme;

Requête 3: SELECT fkJoueur AS IdJoueur, COUNT(idCommande) AS NombreCommandes FROM t_commande GROUP BY IdJoueur ORDER BY NombreCommandes DESC;

Requête 4: SELECT fkJoueur AS IdJoueur, COUNT(idCommande) AS NombreCommandes FROM t_commande GROUP BY IdJoueur HAVING NombreCommandes > 2;

Requête 5 : 
SELECT t1.jouPseudo, t2.idCommande, t4.armNom FROM t_joueur t1 
INNER JOIN t_commande t2 ON t2.fkJoueur = t1.idJoueur 
INNER JOIN t_detail_commande t3 ON t3.fkCommande = t2.idCommande 
INNER JOIN t_arme t4 ON t4.idArme = t3.fkArme;

Requête 6 : SELECT t3.fkJoueur AS idJoueur, SUM(t2.detQuantiteCommande*t1.armPrix) 
AS TotalDepense FROM t_arme AS t1 INNER JOIN t_detail_commande AS t2 ON t2.fkArme = t1.idArme INNER JOIN t_commande AS t3 ON t3.idCommande = t2.fkCommande GROUP BY idJoueur ORDER BY TotalDepense DESC LIMIT 10;

Requête 7 : SELECT t1.jouPseudo, t2.idCommande FROM t_joueur AS t1 LEFT JOIN t_commande AS t2 ON t2.fkJoueur = t1.idJoueur;

Requête 8 : SELECT t1.jouPseudo, t2.idCommande FROM t_joueur AS t1 RIGHT JOIN t_commande AS t2 ON t2.fkJoueur = t1.idJoueur;

Requête 9 : SELECT idJoueur, SUM(detQuantiteCommande) FROM t_joueur t1 LEFT JOIN t_commande t2 ON t1.idJoueur = t2.fkJoueur LEFT JOIN t_detail_commande t3 ON t2.idCommande = t3.fkCommande GROUP BY t1.idJoueur;

Requête 10 : SELECT t1.jouPseudo,COUNT(DISTINCT fkArme) FROM t_joueur t1 
JOIN t_commande t2 ON t1.idJoueur = t2.fkJoueur 
JOIN t_detail_commande t3 ON t2.idCommande = t3.fkCommande 
GROUP BY t1.idJoueur HAVING COUNT(DISTINCT fkArme) > 3;



